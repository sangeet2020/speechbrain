# ################################
# Model: wav2vec2 + DNN + CTC
# Augmentation: SpecAugment
# Authors: Sung-Lin Yeh 2021
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 8200
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/train_wav2vec2+lm_char/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Dataset prep parameters
data_folder: !ref ../../CommonVoice
csv_dir: !ref ../../cv_de_acc
train_tsv_file: !ref <data_folder>/train.tsv
dev_tsv_file: !ref <data_folder>/dev.tsv
test_tsv_file: !ref <data_folder>/test.tsv
accented_letters: True
language: de
skip_prep: False

# Data files
# noise/ris dataset will automatically be downloaded
data_folder_rirs: !ref <csv_dir>
train_csv: !ref <csv_dir>/train.csv
valid_csv: !ref <csv_dir>/dev.csv
test_csv: !ref <csv_dir>/test.csv

# Pre-trained language model
pretrained_lm_path: ../../LM/CKPT+2022-08-23+01-28-00+00
use_lm: True

# We remove utterance slonger than 10s in the train/dev/test sets as
# longer sentences certainly correspond to "open microphones".
avoid_if_longer_than: 10.0

# Training parameters
number_of_epochs: 22
lr: 1.0
lr_wav2vec: 0.0001
sorting: ascending
auto_mix_prec: False
sample_rate: 16000
ckpt_interval_minutes: 30 # save checkpoint every N min

# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 6 per GPU to fit 16GB of VRAM
batch_size: 8
test_batch_size: 8
num_workers:  8

dataloader_options:
   batch_size: !ref <batch_size>
   num_workers: !ref <num_workers>
test_dataloader_options:
   batch_size: !ref <test_batch_size>
   num_workers: !ref <num_workers>

# BPE parameters
# Be sure that the bos and eos index match with the BPEs ones
blank_index: 0
bos_index: 1
eos_index: 2
token_type: char  # ["unigram", "bpe", "char"]
character_coverage: 1.0

# Model parameters
dnn_neurons: 1024
wav2vec_output_dim: !ref <dnn_neurons>
emb_size: 128
output_neurons: 34  # BPE size, index(blank/eos/bos) = 0

# Decoding params when using S2S-RNN-BeamSearchLM
dropout_rate: 0.1
dec_neurons: !ref <dnn_neurons>
dec_rnn_type: gru
dec_attn_type: location
dec_attn_dim: 1024
dec_channels: 10
dec_kernel: 100
dec_layers: 1
dec_dropout: !ref <dropout_rate>

# Decoder hyper-params
min_decode_ratio: 0.0   
max_decode_ratio: 1.0   # hyper-param fine-tuning
beam_size: 80           # hyper-param fine-tuning
eos_threshold: 1.5
using_max_attn_shift: True
max_attn_shift: 140
lm_weight: 0.50         # hyper-param fine-tuning
coverage_penalty: 1.5
temperature: 1.5
temperature_lm: 1.25

# Language model params
lm_emb_size: 128
lm_dropout: 0.0
lm_rnn_layers: 2
lm_rnn_neurons: 2048
lm_dnn_blocks: 1
lm_dnn_neurons: 512

# Functions and classes
normalize: !new:speechbrain.processing.features.InputNormalization
   norm_type: global
   
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
   limit: !ref <number_of_epochs>

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
   sample_rate: !ref <sample_rate>
   speeds: [95, 100, 105]

enc: !new:speechbrain.nnet.containers.Sequential
   input_shape: [null, null, !ref <wav2vec_output_dim>]
   linear1: !name:speechbrain.nnet.linear.Linear
      n_neurons: !ref <dnn_neurons>
      bias: True
   bn1: !name:speechbrain.nnet.normalization.BatchNorm1d
   activation: !new:torch.nn.LeakyReLU
   drop: !new:torch.nn.Dropout
      p: 0.15
   linear2: !name:speechbrain.nnet.linear.Linear
      n_neurons: !ref <dnn_neurons>
      bias: True
   bn2: !name:speechbrain.nnet.normalization.BatchNorm1d
   activation2: !new:torch.nn.LeakyReLU
   drop2: !new:torch.nn.Dropout
      p: 0.15
   linear3: !name:speechbrain.nnet.linear.Linear
      n_neurons: !ref <dnn_neurons>
      bias: True
   bn3: !name:speechbrain.nnet.normalization.BatchNorm1d
   activation3: !new:torch.nn.LeakyReLU

emb: !new:speechbrain.nnet.embedding.Embedding
   num_embeddings: !ref <output_neurons>
   embedding_dim: !ref <emb_size>

dec: !new:speechbrain.nnet.RNN.AttentionalRNNDecoder
   rnn_type: !ref <dec_rnn_type>
   attn_type: !ref <dec_attn_type>
   enc_dim: !ref <dnn_neurons>
   input_size: !ref <emb_size>
   hidden_size: !ref <dec_neurons>
   attn_dim: !ref <dec_attn_dim>
   channels: !ref <dec_channels>
   kernel_size: !ref <dec_kernel>
   num_layers: !ref <dec_layers>
   dropout: !ref <dec_dropout>

# URL for the Fairseq multilingual wav2vec2 model.
freeze_wav2vec: False
wav2vec2_hub: ../../pre-trained/wav2vec2-large-xlsr-53-german
wav2vec2: !new:speechbrain.lobes.models.huggingface_wav2vec.HuggingFaceWav2Vec2
   source: !ref <wav2vec2_hub>
   output_norm: True
   freeze: !ref <freeze_wav2vec>
   save_path: !ref <save_folder>/wav2vec2_checkpoint

#####
# Uncomment this block if you prefer to use a Fairseq pretrained model instead
# of a HuggingFace one. Here, we provide an URL that is obtained from the
# Fairseq github for the multilingual XLSR.
#
#wav2vec2_url: https://dl.fbaipublicfiles.com/fairseq/wav2vec/wav2vec_vox_960h_pl.pt
#wav2vec2: !new:speechbrain.lobes.models.fairseq_wav2vec.FairseqWav2Vec2
#    pretrained_path: !ref <wav2vec2_url>
#    output_norm: True
#    freeze: False
#    save_path: !ref <save_folder>/wav2vec2_checkpoint/model.pt

ctc_lin: !new:speechbrain.nnet.linear.Linear
   input_size: !ref <dnn_neurons>
   n_neurons: !ref <output_neurons>

seq_lin: !new:speechbrain.nnet.linear.Linear
   input_size: !ref <dec_neurons>
   n_neurons: !ref <output_neurons>

log_softmax: !new:speechbrain.nnet.activations.Softmax
   apply_log: True

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
   blank_index: !ref <blank_index>

# This is the RNNLM that is used according to the Huggingface repository
# NB: It has to match the pre-trained RNNLM!!
# lm_model: !new:speechbrain.lobes.models.RNNLM.RNNLM
#    output_neurons: !ref <output_neurons>
#    embedding_dim: !ref <emb_size>
#    activation: !name:torch.nn.LeakyReLU
#    dropout: !ref <lm_dropout>
#    rnn_layers: !ref <lm_rnn_layers>
#    rnn_neurons: !ref <lm_rnn_neurons>
#    dnn_blocks: !ref <lm_dnn_blocks>
#    dnn_neurons: !ref <lm_dnn_neurons>
#    return_hidden: True

modules:
   wav2vec2: !ref <wav2vec2>
   enc: !ref <enc>
   emb: !ref <emb>
   dec: !ref <dec>
   ctc_lin: !ref <ctc_lin>
   seq_lin: !ref <seq_lin>
   # lm_model: !ref <lm_model>

model: !new:torch.nn.ModuleList
   - [!ref <enc>, !ref <ctc_lin>]

model_opt_class: !name:torch.optim.Adadelta
   lr: !ref <lr>
   rho: 0.95
   eps: 1.e-8

wav2vec_opt_class: !name:torch.optim.Adam
   lr: !ref <lr_wav2vec>

# beam_searcher: !new:speechbrain.decoders.S2SRNNBeamSearchLM
#    embedding: !ref <emb>
#    decoder: !ref <dec>
#    linear: !ref <seq_lin>
#    language_model: !ref <lm_model>
#    blank_index: !ref <blank_index>
#    bos_index: !ref <bos_index>
#    eos_index: !ref <eos_index>
#    # blank_index: 0
#    # bos_index: 0
#    # eos_index: 0
#    min_decode_ratio: !ref <min_decode_ratio>
#    max_decode_ratio: !ref <max_decode_ratio>
#    beam_size: !ref <beam_size>
#    eos_threshold: !ref <eos_threshold>
#    using_max_attn_shift: !ref <using_max_attn_shift>
#    max_attn_shift: !ref <max_attn_shift>
#    coverage_penalty: !ref <coverage_penalty>
#    lm_weight: !ref <lm_weight>
#    ctc_weight: !ref <ctc_weight_decode>
#    temperature: !ref <temperature>
#    temperature_lm: !ref <temperature_lm>

beam_search: !new:speechbrain.decoders.S2SRNNBeamSearcher
   embedding: !ref <emb>
   decoder: !ref <dec>
   linear: !ref <seq_lin>
   blank_index: !ref <blank_index>
   bos_index: !ref <bos_index>
   eos_index: !ref <eos_index>
   min_decode_ratio: !ref <min_decode_ratio>
   max_decode_ratio: !ref <max_decode_ratio>
   beam_size: !ref <beam_size>
   eos_threshold: !ref <eos_threshold>
   using_max_attn_shift: !ref <using_max_attn_shift>
   max_attn_shift: !ref <max_attn_shift>
   temperature: !ref <temperature>

lr_annealing_model: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr>
   improvement_threshold: 0.0025
   annealing_factor: 0.8
   patient: 0

lr_annealing_wav2vec: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr_wav2vec>
   improvement_threshold: 0.0025
   annealing_factor: 0.9
   patient: 0

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
   checkpoints_dir: !ref <save_folder>
   recoverables:
      wav2vec2: !ref <wav2vec2>
      model: !ref <model>
      scheduler_model: !ref <lr_annealing_model>
      scheduler_wav2vec: !ref <lr_annealing_wav2vec>
      counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
   save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
   split_tokens: True

# pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
#    collect_in: !ref <save_folder>
#    loadables:
#       lm: !ref <lm_model>
#    paths:
#       lm: !ref <pretrained_lm_path>/model.ckpt